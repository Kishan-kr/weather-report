{"version":3,"sources":["components/AccessLocation.js","components/Hourly.js","components/LowerBody.js","components/Svgs/cloud.png","components/Today.js","components/Tomorrow.js","components/Main.js","components/Svgs/LoadingCloud.svg","components/Svgs/Sun.svg","components/Preloader.js","components/Days.js","components/Week.js","components/FetchData.js","components/Svgs/weatherLogo.svg","components/Header.js","App.js","reportWebVitals.js","index.js"],"names":["AccessLocation","props","btnContainer","React","createRef","off","allowLocation","this","className","ref","onClick","current","classList","add","innerHTML","setTimeout","id","Component","Hourly","time","temp","hour","Date","toLocaleTimeString","parseInt","LowerBody","weatherData","hourly","daily","day","currentDate","dt","toLocaleDateString","firstDay","map","index","dTime","date","split","d","toString","changeFormat","toLocaleString","hr","Today","data","month","year","minute","icon","weather","night","style","position","src","alt","top","right","Clouds","feels_like","clouds","margin","description","Tomorrow","weekday","fontSize","color","Main","Preloader","width","height","Cloud","zIndex","Sun","Days","max","min","Week","FetchData","navigator","geolocation","getCurrentPosition","getPosition","e","console","log","setState","isLocationAllowed","state","isLoading","prevProps","a","lat","url","long","weatherApiKey","fetch","json","parsedData","Header","navLine","today","changeDay","relocateNavLine","event","border","rect","target","getBoundingClientRect","left","title","Logo","disabled","App","process","coords","latitude","longitude","paddingBottom","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.64584ab7.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport class AccessLocation extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.btnContainer = React.createRef();\r\n        this.off = React.createRef();\r\n    }\r\n\r\n    render() {\r\n        let { allowLocation } = this.props;\r\n        function handleOnClick(btnContainer, off) {\r\n            btnContainer.current.classList.add('btn-container-on');\r\n            off.current.innerHTML = 'ON';\r\n            setTimeout(allowLocation, 600)\r\n        }\r\n        return (\r\n            <div className=\"container-fluid first-page d-flex justify-content-center\">\r\n                <div className=\"container d-flex flex-column align-items-center justify-content-center\">\r\n                    <div className=\"container my-4\">\r\n                        <div className=\"give-location\">Allow access to your location to view the weather details</div>\r\n                    </div>\r\n                    <div ref={this.btnContainer} className=\"btn-container-off\" onClick={()=>{handleOnClick(this.btnContainer,this.off)}}>\r\n                        <div className=\"small-btn\">\r\n                            <p ref={this.off} className=\"switch-off\" id=\"on-off\">OFF</p>\r\n                            <div className=\"light\" ></div>\r\n                        </div>\r\n                    </div>\r\n                    <p className=\"btn-title\">Location</p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AccessLocation\r\n","import React, { Component } from 'react'\r\n\r\nexport class Hourly extends Component {\r\n    render() {\r\n        let {time, temp} = this.props;\r\n        let hour = new Date(time * 1000).toLocaleTimeString(\"en-US\",{\r\n            hour: 'numeric'\r\n        });\r\n\r\n        return (\r\n            <div className=\"d-flex flex-column align-items-center mx-1\">\r\n                <div className=\"degree d-flex justify-content-center align-items-center\">{parseInt(temp)} &deg;</div>\r\n                <p className=\"hour-time\">{hour}</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Hourly\r\n","import React, { Component } from 'react'\r\nimport Hourly from './Hourly'\r\n\r\nexport class LowerBody extends Component {\r\n    render() {\r\n        let { hourly, daily } = this.props.weatherData;\r\n        let {day} = this.props;\r\n        let currentDate = new Date(hourly[0].dt * 1000).toLocaleDateString('en-US', {day: 'numeric'})\r\n        currentDate = parseInt(currentDate);\r\n        let firstDay = daily[0].dt;\r\n        function changeFormat(date) {\r\n            let [d, time] = date.split(\", \")\r\n            let [hour, mod] = time.split(\" \");\r\n            if(hour === '12')\r\n                hour = '0';\r\n            if(mod === 'PM')\r\n                hour = parseInt(hour) + 12;\r\n            let dTime = d.toString() +\" \"+ hour.toString();\r\n            return dTime;\r\n        }\r\n\r\n        return (\r\n            <div className=\"lower-Body container-fluid mb-0 mt-4\">\r\n                <div className=\"hourly-container container-fluid d-flex align-items-center\">\r\n                    {hourly.map((hourly, index) => {\r\n                        let tm = new Date(hourly.dt * 1000).toLocaleString(\"en-US\",{\r\n                            day: 'numeric',\r\n                            hour: 'numeric'\r\n                        })\r\n                        let dTime = changeFormat(tm);\r\n                        let [date, hr] = dTime.split(' '); \r\n                        if(day === 'today') {\r\n                            if(index < 24 && (parseInt(hr) <= 6 || parseInt(date)===currentDate)) {\r\n                            return <Hourly key={index}\r\n                                time={hourly.dt}\r\n                                temp={hourly.temp} />\r\n                            }\r\n                        }\r\n                        else {\r\n                            if((hourly.dt >= firstDay+43200 && parseInt(hr) >= 6 && hourly.dt < firstDay+129600)||(hourly.dt >= firstDay+129600 && parseInt(hr)<=6)) {\r\n                                return <Hourly key={index}\r\n                                time={hourly.dt}\r\n                                temp={hourly.temp} />\r\n                            }\r\n                        }\r\n                    })}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LowerBody\r\n\r\n// 1634884200\r\n// 1634970600\r\n// 86400 (gap)","export default __webpack_public_path__ + \"static/media/cloud.e44b9adb.png\";","import React, { Component } from 'react'\r\nimport Clouds from './Svgs/cloud.png';\r\n\r\nexport class Today extends Component {\r\n    render() {\r\n        let {data} = this.props;\r\n        let dt = new Date(data.current.dt * 1000)\r\n        let date = dt.toLocaleDateString(\"en-US\", {\r\n            day: '2-digit',\r\n            month: 'long',\r\n            year: 'numeric'\r\n        });\r\n        let time = dt.toLocaleTimeString(\"en-US\", {\r\n            hour: 'numeric',\r\n            minute: '2-digit'\r\n        });\r\n        let icon = data.current.weather[0].icon;\r\n\r\n        return (\r\n            <div className=\"container main\">\r\n                <div className=\"container-fluid py-3 d-flex justify-content-around\">\r\n                    <div className=\"container-fluid px-0 d-flex flex-column align-items-start\">\r\n                        <p className=\"date\">{date}</p>\r\n                        <p className=\"time\">{time}</p>\r\n                    </div>\r\n                    <div className=\"container-fluid px-0 d-flex flex-column align-items-end\">\r\n                        <p className=\"day\">Day {parseInt(data.daily[0].temp.day)} &nbsp; &uarr;</p>\r\n                        <p className=\"night\">Night {parseInt(data.daily[0].temp.night)} &darr;</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"container-fluid\" style={{ position: 'relative' }}>\r\n                    <div className=\"d-flex\">\r\n                        <h1 className=\"current-temp\">{parseInt(data.current.temp)} &deg;c</h1>\r\n                        <img src={`http://openweathermap.org/img/wn/${icon}@2x.png`} alt=\"\"\r\n                            style={{ position: 'absolute', top: '-10px', right: '0px' }} />\r\n                    </div>\r\n                    <img src={Clouds} alt=\"cloud not found\" className=\"clouds\" />\r\n                    <p className=\"feels\">Feels like {data.current.feels_like} &deg;</p>\r\n                    <div className=\"row justify-content-between\">\r\n                        <div className=\"col-6\">\r\n                        <p className=\"rain\">Rain&nbsp;{data.current.clouds}&nbsp;<span>%</span></p>\r\n                        </div>\r\n                        <div className=\"col-6 d-flex justify-content-end\">\r\n                            <p className=\"description\" \r\n                                style={{margin: '1.7rem 0'}}>{data.daily[0].weather[0].description}</p>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Today\r\n","import React, { Component } from 'react'\r\nimport Clouds from './Svgs/cloud.png';\r\n\r\nexport class Tomorrow extends Component {\r\n    render() {\r\n        let {data} = this.props;\r\n        let dt = new Date(data.daily[1].dt * 1000)\r\n        let date = dt.toLocaleDateString(\"en-US\", {\r\n            day: '2-digit',\r\n            month: 'long',\r\n            year: 'numeric'\r\n        });\r\n        let weekday = dt.toLocaleString(\"en-US\", {\r\n            weekday: 'long'\r\n        });\r\n        let icon = data.daily[1].weather[0].icon;\r\n\r\n        return (\r\n            <div className=\"container main\">\r\n                <div className=\"container-fluid py-3 d-flex justify-content-around\">\r\n                    <div className=\"container-fluid px-0 d-flex flex-column align-items-start\">\r\n                        <p className=\"date\">{date}</p>\r\n                        <p className=\"time\">{weekday}</p>\r\n                    </div>\r\n                    <div className=\"container-fluid px-0 d-flex flex-column align-items-end\">\r\n                        <p className=\"day\">Day {parseInt(data.daily[1].temp.day)} &nbsp; &uarr;</p>\r\n                        <p className=\"night\">Night {parseInt(data.daily[1].temp.night)} &darr;</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"container-fluid\" style={{ position: 'relative' }}>\r\n                    <div className=\"d-flex\">\r\n                        <h1 className=\"current-temp\"\r\n                            style={{fontSize: '1.8rem'}}>{\r\n                            data.daily[1].weather[0].description}</h1>\r\n                        <img src={`http://openweathermap.org/img/wn/${icon}.png`} alt=\"\"\r\n                            style={{ position: 'absolute', top: '-10px', right: '0px' }} />\r\n                    </div>\r\n                    <img src={Clouds} alt=\"cloud not found\" className=\"clouds\" />\r\n                    <p className=\"feels\" style={{color: 'transparent'}}>Feels Like</p>\r\n                    <div className=\"row justify-content-between\">\r\n                        <div className=\"col-4\">\r\n                        <p className=\"rain\">Rain&nbsp;{data.daily[1].clouds}&nbsp;<span>%</span></p>\r\n                        </div>\r\n                        <div className=\"col-4 d-flex align-items-end\">\r\n                            \r\n                        </div>\r\n                    </div>\r\n                    \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Tomorrow\r\n","import React, { Component } from 'react'\r\nimport Today from './Today';\r\nimport Tomorrow from './Tomorrow';\r\n\r\nexport class Main extends Component {\r\n\r\n    render() {\r\n        let {day, weatherData} = this.props;\r\n        if(day === 'today')\r\n            return (\r\n                <Today data = {weatherData} />\r\n            )\r\n        else\r\n            return (\r\n                <Tomorrow data = {weatherData} />\r\n            )\r\n    }\r\n}\r\n\r\nexport default Main\r\n","export default __webpack_public_path__ + \"static/media/LoadingCloud.1e77a8bf.svg\";","export default __webpack_public_path__ + \"static/media/Sun.c0bb79a5.svg\";","import React, { Component } from 'react'\r\nimport Cloud from './Svgs/LoadingCloud.svg'\r\nimport Sun from './Svgs/Sun.svg'\r\n\r\nexport class Preloader extends Component {\r\n    render() {\r\n        return (\r\n            <div \r\n                className=\"container-fluid loading-container d-flex justify-content-center align-items-center\" \r\n                style={{width: '100vw', height: '100vh', position: 'absolute', top: '0'}}\r\n                >\r\n                <div className=\"d-flex justify-content-center align-items-center mt-3\" \r\n                style={{position: 'relative'}}>\r\n                    <img src={Cloud} alt=\"\" \r\n                        className=\"loading-cloud\" \r\n                        style={{zIndex: '2', width: '80px'}} />\r\n                    <img src={Sun} alt=\"\" \r\n                        className=\"sun\" \r\n                        style={{zIndex: '1', width: '62px', position: 'absolute', top: '-18px', right: '-10px'}} />\r\n                    <p className=\"loading\">Loading...</p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Preloader\r\n","import React, { Component } from 'react'\r\n\r\nexport class Days extends Component {\r\n    render() {\r\n        let {daily} = this.props;\r\n        let date = new Date(daily.dt*1000).toLocaleString(\"en-US\",{\r\n            weekday: 'long',\r\n            day: 'numeric',\r\n            month: 'short'\r\n        })\r\n\r\n        const icon = daily.weather[0].icon;\r\n\r\n        return (\r\n            <div className=\"container row week mx-0 py-3\">\r\n                <div className=\"col-8\">\r\n                    <p className=\"date\">{date}</p>\r\n                    <p className=\"desc\">{daily.weather[0].description}</p>\r\n                </div>\r\n                <div className=\"col-4 d-flex align-items-center justify-content-end\">\r\n                    <img src={`http://openweathermap.org/img/wn/${icon}.png`} alt=\"\" />\r\n                    <div className=\"d-flex flex-column align-items-center\">\r\n                        <p className=\"temp\">{parseInt(daily.temp.max)}&deg;</p>\r\n                        <p className=\"temp\">{parseInt(daily.temp.min)}&deg;</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Days\r\n","import React, { Component } from 'react'\r\nimport Days from './Days';\r\n\r\nexport class Week extends Component {\r\n    render() {\r\n        let {daily} = this.props;\r\n        return (\r\n            <div className=\"container-fluid mt-0 px-0 d-flex flex-column align-items-center\">\r\n                {\r\n                    daily.map((daily,index) => {\r\n                        return (\r\n                            <Days key={index} daily = {daily} />\r\n                        )\r\n                    })\r\n                }\r\n                <div className=\"credits container row py-2\">\r\n                    <div className=\"col\">React app</div>\r\n                    <div className=\"col d-flex justify-content-center\">by&nbsp;Kishan&nbsp;Kumar</div>\r\n                    <div className=\"col d-flex justify-content-end\">openweathermap.org</div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Week\r\n","import React, { Component } from 'react'\r\nimport AccessLocation from './AccessLocation';\r\nimport LowerBody from './LowerBody';\r\nimport Main from './Main';\r\nimport Preloader from './Preloader';\r\nimport Week from './Week';\r\n\r\nexport class FetchData extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            weatherData: null,\r\n            isLoading: false,\r\n            isLocationAllowed : false\r\n        }\r\n    }\r\n\r\n    allowLocation = () => {\r\n        try {\r\n            navigator.geolocation.getCurrentPosition(this.props.getPosition)\r\n        }\r\n        catch(e) {\r\n            console.log(e);\r\n        }\r\n        this.setState({isLocationAllowed: true})\r\n    }\r\n    \r\n    async componentDidUpdate(prevProps) {\r\n        if(this.props.lat !== prevProps.lat) {\r\n            this.setState({isLoading: true})\r\n            let url = `https://api.openweathermap.org/data/2.5/onecall?lat=${this.props.lat}&lon=${this.props.long}&units=metric&exclude=minutely,alerts&appid=${this.props.weatherApiKey}`;\r\n            let data = await fetch(url);\r\n            let parsedData = await data.json();\r\n            this.setState({\r\n                weatherData: parsedData,\r\n                isLoading: false\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        let {day} = this.props;\r\n        if(!this.state.isLocationAllowed) {\r\n            return (\r\n                <AccessLocation allowLocation = {this.allowLocation} />\r\n            )\r\n        }\r\n        \r\n        else {\r\n            if(this.state.weatherData === null) {\r\n                return (\r\n                    <Preloader />\r\n                )\r\n            }\r\n            else {\r\n                if(day !== 'week') {\r\n                    return (\r\n                        <>\r\n                            <Main weatherData = {this.state.weatherData} day = {day} />\r\n                            <LowerBody weatherData = {this.state.weatherData} day = {day} />\r\n                        </>\r\n                    )\r\n                }\r\n                else {\r\n                    return (\r\n                    <Week daily = {this.state.weatherData.daily} />\r\n                    )\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default FetchData\r\n","export default __webpack_public_path__ + \"static/media/weatherLogo.d20f24d0.svg\";","import React, { Component } from 'react'\r\nimport Logo from './Svgs/weatherLogo.svg';\r\n\r\nexport class Header extends Component {\r\n    constructor() {\r\n        super()\r\n        this.navLine = React.createRef();\r\n        this.today = React.createRef();\r\n    }\r\n    render() {\r\n        let {changeDay} = this.props;\r\n\r\n        function relocateNavLine(event,navLine,today) {\r\n            today.current.style.border = 'none';\r\n            let rect = event.target.getBoundingClientRect();\r\n            navLine.current.style.left = `${rect.left-10}px`;\r\n            if(event.target.title === 'today') {\r\n                navLine.current.style.width = '38px';\r\n            }\r\n            else if(event.target.title === 'tomorrow') {\r\n                navLine.current.style.width = '70px';\r\n            }\r\n            else {\r\n                navLine.current.style.width = '38px';\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className=\"header container-fluid pb-0\">\r\n                <div className=\"container px-0 py-3 d-flex align-items-center\">\r\n                    <img src={Logo} alt=\"WR\" className=\"logo\" style={{width: 3.5 +\"rem\", height: 2.9 +\"rem\" }}/>\r\n                    <h3 className=\"logo-text\">Weather</h3>\r\n                </div>\r\n                <div className=\" pb-0 d-flex align-items-center justify-content-around nav\">\r\n                    <button ref={this.today} disabled={this.props.lat===\"\"?true:false} \r\n                        className=\"nav-item\" \r\n                        title=\"today\"\r\n                        onClick={(event)=> {\r\n                            changeDay(event); \r\n                            relocateNavLine(event,this.navLine,this.today)\r\n                        }}\r\n                        >Today\r\n                    </button>\r\n                    <button disabled={this.props.lat===\"\"?true:false} \r\n                        className=\"nav-item\" \r\n                        title=\"tomorrow\"\r\n                        onClick={(event)=> {\r\n                            changeDay(event); \r\n                            relocateNavLine(event,this.navLine,this.today)\r\n                        }}\r\n                        >Tomorrow\r\n                    </button>\r\n                    <button disabled={this.props.lat===\"\"?true:false} \r\n                        className=\"nav-item\" \r\n                        title=\"week\"\r\n                        onClick={(event)=> {\r\n                            changeDay(event); \r\n                            relocateNavLine(event,this.navLine,this.today)\r\n                        }}\r\n                        >Week\r\n                    </button>\r\n                    <div ref={this.navLine} className=\"nav-line\"></div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header\r\n","\nimport React, { Component } from 'react'\nimport './App.css';\nimport FetchData from './components/FetchData';\nimport Header from './components/Header';\n\nexport class App extends Component {\n  weatherApiKey = process.env.REACT_APP_WEATHER_API_KEY;\n  \n  constructor() {\n    super()\n    this.state = {\n      lat: \"\",\n      long: \"\",\n      day: 'today'\n    }\n  }\n\n  \n  getPosition = (position) => {\n    this.setState({\n      lat : position.coords.latitude,\n      long : position.coords.longitude\n    })\n  }\n    \n  changeDay = (event) => {\n    this.setState({day: event.target.title})\n  }\n\n  render() {\n    return (\n      <div className=\"layer\" style={{paddingBottom: 0}}>\n        <Header changeDay = {this.changeDay} lat = {this.state.lat} />\n        <FetchData \n          weatherApiKey = {this.weatherApiKey} \n          lat = {this.state.lat} \n          long = {this.state.long} \n          getPosition = {this.getPosition}\n          day = {this.state.day}\n        />\n      </div>\n    )\n  }\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}