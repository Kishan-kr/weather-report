{"version":3,"sources":["components/Svgs/BgLogo.svg","components/Bg.js","components/AccessLocation.js","components/Hourly.js","components/LowerBody.js","components/Svgs/cloud.png","components/Today.js","components/Tomorrow.js","components/Main.js","components/Svgs/LoadingCloud.svg","components/Svgs/Sun.svg","components/Preloader.js","components/Days.js","components/Week.js","components/FetchData.js","components/Svgs/weatherLogo.svg","components/Header.js","App.js","reportWebVitals.js","index.js"],"names":["Bg","className","src","Cloud","alt","style","width","Component","AccessLocation","props","btnContainer","React","createRef","off","allowLocation","this","ref","onClick","current","classList","add","innerHTML","setTimeout","id","Hourly","time","temp","hour","Date","toLocaleTimeString","parseInt","LowerBody","weatherData","hourly","daily","day","currentDate","dt","toLocaleDateString","firstDay","toLocaleString","map","index","dTime","date","split","d","toString","changeFormat","hr","Today","data","month","year","minute","icon","weather","night","position","top","right","Clouds","feels_like","clouds","margin","description","Tomorrow","weekday","fontSize","color","Main","Preloader","height","zIndex","Sun","Days","max","min","Week","FetchData","geoApiKey","navigator","geolocation","getCurrentPosition","getPosition","e","console","log","setState","isLocationAllowed","state","isLoading","prevProps","a","lat","url","long","weatherApiKey","fetch","json","parsedData","Header","navLine","today","changeDay","relocateNavLine","event","border","rect","target","getBoundingClientRect","left","title","Logo","disabled","App","process","coords","latitude","longitude","paddingBottom","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.28ecf028.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/BgLogo.1e4359a9.svg\";","import React, { Component } from 'react'\r\nimport Cloud from './Svgs/BgLogo.svg';\r\n\r\nexport class Bg extends Component {\r\n    render() {\r\n        return (\r\n            <div className='bg container-fluid'>\r\n                <img src={Cloud} alt=\"\" style={{width: 90 + 'vw'}} className=\"clouds\" />\r\n                <div className=\"blur-layer\"></div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Bg\r\n","import React, { Component } from 'react'\r\n\r\nexport class AccessLocation extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.btnContainer = React.createRef();\r\n        this.off = React.createRef();\r\n    }\r\n\r\n    // handleOnClick() {\r\n    //     this.props.allowLocation;\r\n    //     this.btnContainer.current.classList.add('btn-container-on');\r\n    // }\r\n\r\n    render() {\r\n        let { allowLocation } = this.props;\r\n        function handleOnClick(btnContainer, off) {\r\n            btnContainer.current.classList.add('btn-container-on');\r\n            off.current.innerHTML = 'ON';\r\n            setTimeout(allowLocation, 600)\r\n        }\r\n        return (\r\n            <div className=\"container-fluid first-page d-flex justify-content-center\">\r\n                <div className=\"container d-flex flex-column align-items-center justify-content-center\">\r\n                    <div className=\"container my-4\">\r\n                        <div className=\"give-location\">Allow access to your location to view the weather details</div>\r\n                    </div>\r\n                    <div ref={this.btnContainer} className=\"btn-container-off\" onClick={()=>{handleOnClick(this.btnContainer,this.off)}}>\r\n                        <div className=\"small-btn\">\r\n                            <p ref={this.off} className=\"switch-off\" id=\"on-off\">OFF</p>\r\n                            <div className=\"light\" ></div>\r\n                        </div>\r\n                    </div>\r\n                    <p className=\"btn-title\">Location</p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AccessLocation\r\n","import React, { Component } from 'react'\r\n\r\nexport class Hourly extends Component {\r\n    render() {\r\n        let {time, temp} = this.props;\r\n        let hour = new Date(time * 1000).toLocaleTimeString(\"en-US\",{\r\n            hour: 'numeric'\r\n        });\r\n\r\n        return (\r\n            <div className=\"d-flex flex-column align-items-center mx-1\">\r\n                <div className=\"degree d-flex justify-content-center align-items-center\">{parseInt(temp)} &deg;</div>\r\n                <p className=\"hour-time\">{hour}</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Hourly\r\n","import React, { Component } from 'react'\r\nimport Hourly from './Hourly'\r\n\r\nexport class LowerBody extends Component {\r\n    render() {\r\n        let { hourly, daily } = this.props.weatherData;\r\n        let {day} = this.props;\r\n        let currentDate = new Date(hourly[0].dt * 1000).toLocaleDateString('en-US', {day: 'numeric'})\r\n        currentDate = parseInt(currentDate);\r\n        let firstDay = daily[0].dt;\r\n        let fd = new Date(firstDay*1000).toLocaleString('en-US')\r\n        function changeFormat(date) {\r\n            let [d, time] = date.split(\", \")\r\n            let [hour, mod] = time.split(\" \");\r\n            if(hour === '12')\r\n                hour = '0';\r\n            if(mod === 'PM')\r\n                hour = parseInt(hour) + 12;\r\n            let dTime = d.toString() +\" \"+ hour.toString();\r\n            return dTime;\r\n        }\r\n\r\n        return (\r\n            <div className=\"lower-Body container-fluid mb-0 mt-4\">\r\n                <div className=\"hourly-container container-fluid d-flex align-items-center\">\r\n                    {hourly.map((hourly, index) => {\r\n                        let tm = new Date(hourly.dt * 1000).toLocaleString(\"en-US\",{\r\n                            day: 'numeric',\r\n                            hour: 'numeric'\r\n                        })\r\n                        let dTime = changeFormat(tm);\r\n                        let [date, hr] = dTime.split(' '); \r\n                        if(day === 'today') {\r\n                            if(index < 24 && (parseInt(hr) <= 6 || parseInt(date)===currentDate)) {\r\n                            return <Hourly key={index}\r\n                                time={hourly.dt}\r\n                                temp={hourly.temp} />\r\n                            }\r\n                        }\r\n                        else {\r\n                            if((hourly.dt >= firstDay+43200 && parseInt(hr) >= 6 && hourly.dt < firstDay+129600)||(hourly.dt >= firstDay+129600 && parseInt(hr)<=6)) {\r\n                                return <Hourly key={index}\r\n                                time={hourly.dt}\r\n                                temp={hourly.temp} />\r\n                            }\r\n                        }\r\n                    })}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LowerBody\r\n\r\n// 1634884200\r\n// 1634970600\r\n// 86400 (gap)","export default __webpack_public_path__ + \"static/media/cloud.e44b9adb.png\";","import React, { Component } from 'react'\r\nimport Clouds from './Svgs/cloud.png';\r\n\r\nexport class Today extends Component {\r\n    render() {\r\n        let {data} = this.props;\r\n        let dt = new Date(data.current.dt * 1000)\r\n        let date = dt.toLocaleDateString(\"en-US\", {\r\n            day: '2-digit',\r\n            month: 'long',\r\n            year: 'numeric'\r\n        });\r\n        let time = dt.toLocaleTimeString(\"en-US\", {\r\n            hour: 'numeric',\r\n            minute: '2-digit'\r\n        });\r\n        let icon = data.current.weather[0].icon;\r\n\r\n        return (\r\n            <div className=\"container main\">\r\n                <div className=\"container-fluid py-3 d-flex justify-content-around\">\r\n                    <div className=\"container-fluid px-0 d-flex flex-column align-items-start\">\r\n                        <p className=\"date\">{date}</p>\r\n                        <p className=\"time\">{time}</p>\r\n                    </div>\r\n                    <div className=\"container-fluid px-0 d-flex flex-column align-items-end\">\r\n                        <p className=\"day\">Day {parseInt(data.daily[0].temp.day)} &nbsp; &uarr;</p>\r\n                        <p className=\"night\">Night {parseInt(data.daily[0].temp.night)} &darr;</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"container-fluid\" style={{ position: 'relative' }}>\r\n                    <div className=\"d-flex\">\r\n                        <h1 className=\"current-temp\">{parseInt(data.current.temp)} &deg;c</h1>\r\n                        <img src={`http://openweathermap.org/img/wn/${icon}@2x.png`} alt=\"\"\r\n                            style={{ position: 'absolute', top: '-10px', right: '0px' }} />\r\n                    </div>\r\n                    <img src={Clouds} alt=\"cloud not found\" className=\"clouds\" />\r\n                    <p className=\"feels\">Feels like {data.current.feels_like} &deg;</p>\r\n                    <div className=\"row justify-content-between\">\r\n                        <div className=\"col-6\">\r\n                        <p className=\"rain\">Rain&nbsp;{data.current.clouds}&nbsp;<span>%</span></p>\r\n                        </div>\r\n                        <div className=\"col-6 d-flex justify-content-end\">\r\n                            <p className=\"description\" \r\n                                style={{margin: '1.7rem 0'}}>{data.daily[0].weather[0].description}</p>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Today\r\n","import React, { Component } from 'react'\r\nimport Clouds from './Svgs/cloud.png';\r\n\r\nexport class Tomorrow extends Component {\r\n    render() {\r\n        let {data} = this.props;\r\n        let dt = new Date(data.daily[1].dt * 1000)\r\n        let date = dt.toLocaleDateString(\"en-US\", {\r\n            day: '2-digit',\r\n            month: 'long',\r\n            year: 'numeric'\r\n        });\r\n        let weekday = dt.toLocaleString(\"en-US\", {\r\n            weekday: 'long'\r\n        });\r\n        let icon = data.daily[1].weather[0].icon;\r\n\r\n        return (\r\n            <div className=\"container main\">\r\n                <div className=\"container-fluid py-3 d-flex justify-content-around\">\r\n                    <div className=\"container-fluid px-0 d-flex flex-column align-items-start\">\r\n                        <p className=\"date\">{date}</p>\r\n                        <p className=\"time\">{weekday}</p>\r\n                    </div>\r\n                    <div className=\"container-fluid px-0 d-flex flex-column align-items-end\">\r\n                        <p className=\"day\">Day {parseInt(data.daily[1].temp.day)} &nbsp; &uarr;</p>\r\n                        <p className=\"night\">Night {parseInt(data.daily[1].temp.night)} &darr;</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"container-fluid\" style={{ position: 'relative' }}>\r\n                    <div className=\"d-flex\">\r\n                        <h1 className=\"current-temp\"\r\n                            style={{fontSize: '1.8rem'}}>{\r\n                            data.daily[1].weather[0].description}</h1>\r\n                        <img src={`http://openweathermap.org/img/wn/${icon}.png`} alt=\"\"\r\n                            style={{ position: 'absolute', top: '-10px', right: '0px' }} />\r\n                    </div>\r\n                    <img src={Clouds} alt=\"cloud not found\" className=\"clouds\" />\r\n                    <p className=\"feels\" style={{color: 'transparent'}}>Feels Like</p>\r\n                    <div className=\"row justify-content-between\">\r\n                        <div className=\"col-4\">\r\n                        <p className=\"rain\">Rain&nbsp;{data.daily[1].clouds}&nbsp;<span>%</span></p>\r\n                        </div>\r\n                        <div className=\"col-4 d-flex align-items-end\">\r\n                            \r\n                        </div>\r\n                    </div>\r\n                    \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Tomorrow\r\n","import React, { Component } from 'react'\r\nimport Today from './Today';\r\nimport Tomorrow from './Tomorrow';\r\n\r\nexport class Main extends Component {\r\n\r\n    render() {\r\n        let {day, weatherData} = this.props;\r\n        if(day === 'today')\r\n            return (\r\n                <Today data = {weatherData} />\r\n            )\r\n        else\r\n            return (\r\n                <Tomorrow data = {weatherData} />\r\n            )\r\n    }\r\n}\r\n\r\nexport default Main\r\n","export default __webpack_public_path__ + \"static/media/LoadingCloud.1e77a8bf.svg\";","export default __webpack_public_path__ + \"static/media/Sun.c0bb79a5.svg\";","import React, { Component } from 'react'\r\nimport Cloud from './Svgs/LoadingCloud.svg'\r\nimport Sun from './Svgs/Sun.svg'\r\n\r\nexport class Preloader extends Component {\r\n    render() {\r\n        return (\r\n            <div \r\n                className=\"container-fluid loading-container d-flex justify-content-center align-items-center\" \r\n                style={{width: '100vw', height: '100vh', position: 'absolute', top: '0'}}\r\n                >\r\n                <div className=\"d-flex justify-content-center align-items-center mt-3\" \r\n                style={{position: 'relative'}}>\r\n                    <img src={Cloud} alt=\"\" \r\n                        className=\"loading-cloud\" \r\n                        style={{zIndex: '2', width: '80px'}} />\r\n                    <img src={Sun} alt=\"\" \r\n                        className=\"sun\" \r\n                        style={{zIndex: '1', width: '62px', position: 'absolute', top: '-18px', right: '-10px'}} />\r\n                    <p className=\"loading\">Loading...</p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Preloader\r\n","import React, { Component } from 'react'\r\n\r\nexport class Days extends Component {\r\n    render() {\r\n        let {daily} = this.props;\r\n        let date = new Date(daily.dt*1000).toLocaleString(\"en-US\",{\r\n            weekday: 'long',\r\n            day: 'numeric',\r\n            month: 'short'\r\n        })\r\n\r\n        const icon = daily.weather[0].icon;\r\n\r\n        return (\r\n            <div className=\"container row week mx-0 py-3\">\r\n                <div className=\"col-8\">\r\n                    <p className=\"date\">{date}</p>\r\n                    <p className=\"desc\">{daily.weather[0].description}</p>\r\n                </div>\r\n                <div className=\"col-4 d-flex align-items-center justify-content-center\">\r\n                    <img src={`http://openweathermap.org/img/wn/${icon}.png`} alt=\"\" />\r\n                    <div className=\"d-flex flex-column align-items-center\">\r\n                        <p className=\"temp\">{parseInt(daily.temp.max)}&deg;</p>\r\n                        <p className=\"temp\">{parseInt(daily.temp.min)}&deg;</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Days\r\n","import React, { Component } from 'react'\r\nimport Days from './Days';\r\n\r\nexport class Week extends Component {\r\n    render() {\r\n        let {daily} = this.props;\r\n        return (\r\n            <div className=\"container-fluid mt-0 px-0\">\r\n                {\r\n                    daily.map((daily,index) => {\r\n                        return (\r\n                            <Days key={index} daily = {daily} />\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Week\r\n","import React, { Component } from 'react'\r\nimport AccessLocation from './AccessLocation';\r\nimport LowerBody from './LowerBody';\r\nimport Main from './Main';\r\nimport Preloader from './Preloader';\r\nimport Week from './Week';\r\n\r\nexport class FetchData extends Component {\r\n    geoApiKey = \"AIzaSyA01nhE3k_LUcX8M228M82SeUHLcjlLkZo\";\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            weatherData: null,\r\n            isLoading: false,\r\n            isLocationAllowed : false\r\n        }\r\n    }\r\n\r\n    allowLocation = () => {\r\n        try {\r\n            navigator.geolocation.getCurrentPosition(this.props.getPosition)\r\n        }\r\n        catch(e) {\r\n            console.log(e);\r\n        }\r\n        this.setState({isLocationAllowed: true})\r\n    }\r\n    \r\n    async componentDidUpdate(prevProps) {\r\n        if(this.props.lat !== prevProps.lat) {\r\n            this.setState({isLoading: true})\r\n            let url = `https://api.openweathermap.org/data/2.5/onecall?lat=${this.props.lat}&lon=${this.props.long}&units=metric&exclude=minutely,alerts&appid=${this.props.weatherApiKey}`;\r\n            let data = await fetch(url);\r\n            let parsedData = await data.json();\r\n            this.setState({\r\n                weatherData: parsedData,\r\n                isLoading: false\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        let {day} = this.props;\r\n        if(!this.state.isLocationAllowed) {\r\n            return (\r\n                <AccessLocation allowLocation = {this.allowLocation} />\r\n            )\r\n        }\r\n        \r\n        else {\r\n            if(this.state.weatherData === null) {\r\n                return (\r\n                    <Preloader />\r\n                )\r\n            }\r\n            else {\r\n                if(day !== 'week') {\r\n                    return (\r\n                        <>\r\n                            <Main weatherData = {this.state.weatherData} day = {day} />\r\n                            <LowerBody weatherData = {this.state.weatherData} day = {day} />\r\n                        </>\r\n                    )\r\n                }\r\n                else {\r\n                    return (\r\n                    <Week daily = {this.state.weatherData.daily} />\r\n                    )\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default FetchData\r\n","export default __webpack_public_path__ + \"static/media/weatherLogo.d20f24d0.svg\";","import React, { Component } from 'react'\r\nimport Logo from './Svgs/weatherLogo.svg';\r\n\r\nexport class Header extends Component {\r\n    constructor() {\r\n        super()\r\n        this.navLine = React.createRef();\r\n        this.today = React.createRef();\r\n    }\r\n    render() {\r\n        let {changeDay} = this.props;\r\n\r\n        function relocateNavLine(event,navLine,today) {\r\n            today.current.style.border = 'none';\r\n            let rect = event.target.getBoundingClientRect();\r\n            navLine.current.style.left = `${rect.left-10}px`;\r\n            if(event.target.title === 'today') {\r\n                navLine.current.style.width = '38px';\r\n            }\r\n            else if(event.target.title === 'tomorrow') {\r\n                navLine.current.style.width = '70px';\r\n            }\r\n            else {\r\n                navLine.current.style.width = '38px';\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className=\"header container-fluid pb-0\">\r\n                <div className=\"container px-0 py-3 d-flex align-items-center\">\r\n                    <img src={Logo} alt=\"WR\" className=\"logo\" style={{width: 3.5 +\"rem\", height: 2.9 +\"rem\" }}/>\r\n                    <h3 className=\"logo-text\">Weather</h3>\r\n                </div>\r\n                <div className=\" pb-0 d-flex align-items-center justify-content-around nav\">\r\n                    <button ref={this.today} disabled={this.props.lat===\"\"?true:false} \r\n                        className=\"nav-item\" \r\n                        title=\"today\"\r\n                        onClick={(event)=> {\r\n                            changeDay(event); \r\n                            relocateNavLine(event,this.navLine,this.today)\r\n                        }}\r\n                        >Today\r\n                    </button>\r\n                    <button disabled={this.props.lat===\"\"?true:false} \r\n                        className=\"nav-item\" \r\n                        title=\"tomorrow\"\r\n                        onClick={(event)=> {\r\n                            changeDay(event); \r\n                            relocateNavLine(event,this.navLine,this.today)\r\n                        }}\r\n                        >Tomorrow\r\n                    </button>\r\n                    <button disabled={this.props.lat===\"\"?true:false} \r\n                        className=\"nav-item\" \r\n                        title=\"week\"\r\n                        onClick={(event)=> {\r\n                            changeDay(event); \r\n                            relocateNavLine(event,this.navLine,this.today)\r\n                        }}\r\n                        >Week\r\n                    </button>\r\n                    <div ref={this.navLine} className=\"nav-line\"></div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header\r\n","\nimport React, { Component } from 'react'\nimport './App.css';\nimport Bg from './components/Bg';\nimport FetchData from './components/FetchData';\nimport Header from './components/Header';\n\nexport class App extends Component {\n  weatherApiKey = process.env.REACT_APP_WEATHER_API_KEY;\n  \n  constructor() {\n    super()\n    this.state = {\n      lat: \"\",\n      long: \"\",\n      day: 'today'\n    }\n  }\n\n  \n  getPosition = (position) => {\n    this.setState({\n      lat : position.coords.latitude,\n      long : position.coords.longitude\n    })\n  }\n    \n  changeDay = (event) => {\n    this.setState({day: event.target.title})\n  }\n\n  render() {\n    return (\n      <div style={{paddingBottom: 0}}>\n        <Bg />\n        <Header changeDay = {this.changeDay} lat = {this.state.lat} />\n        <FetchData \n          weatherApiKey = {this.weatherApiKey} \n          lat = {this.state.lat} \n          long = {this.state.long} \n          getPosition = {this.getPosition}\n          day = {this.state.day}\n        />\n      </div>\n    )\n  }\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}